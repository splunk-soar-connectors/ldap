{
    "appid": "84110F27-6602-4DC8-A6F2-0311B1720BF8",
    "name": "LDAP",
    "description": "This app implements various investigative, contain, correct, and generic actions that can be carried out on an AD server",
    "publisher": "Splunk",
    "type": "directory service",
    "main_module": "ldap_connector.pyc",
    "app_version": "1.2.42",
    "utctime_updated": "2019-11-07T23:33:30.000000Z",
    "package_name": "phantom_ldap",
    "product_vendor": "Microsoft",
    "product_name": "Windows Server",
    "product_version_regex": ".*",
    "min_phantom_version": "4.6.19142",
    "logo": "logo_microsoft.svg",
    "logo_dark": "logo_microsoft_dark.svg",
    "latest_tested_versions": [
        "ldap platform Windows Server 2008 R2 Enterprise",
        "ldap v3.2.0"
    ],
    "license": "Copyright (c) 2016-2020 Splunk Inc.",
    "configuration": {
        "username": {
            "required": true,
            "order": 2,
            "data_type": "string",
            "description": "Administrator username"
        },
        "password": {
            "required": true,
            "order": 3,
            "data_type": "password",
            "description": "Administrator password"
        },
        "force_ssl": {
            "default": true,
            "order": 1,
            "data_type": "boolean",
            "description": "Force use of SSL"
        },
        "server": {
            "required": true,
            "order": 0,
            "data_type": "string",
            "description": "Server IP/Hostname"
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity. This action logs into the device to check the connection and credentials",
            "type": "test",
            "identifier": "test_asset_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "disable user",
            "description": "Disables the specified user",
            "verbose": "The action supports the following formats as input for <b>username</b>: <ul> <li>Simple user name format, for example, test_user (<i>sAMAccountName</i> in AD nomenclature)</li> <li>Email address, for example, test_user@corp.contoso.com (<i>userPrincipalName</i>)</li> <li>Distinguished name format, for example, CN=Test User,CN=Users,DC=corp,DC=contoso,DC=com (<i>distinguishedName</i>)</li> <li>Domain\\user_name, for example, Corp\\test_user</li> </ul><b>Action functional workflow</b><ul><li>This action will first find the user DN(distinguish name) using a filter of Hostname which is provided by the user as a parameter</li> <li>Now it will search for userAccountControl parameter for provided DN.</li> <li>If userAccountControl parameter is not none and action identifier is disable_user then it will modify the user state to disable mode</li> </ul>",
            "type": "contain",
            "identifier": "disable_user",
            "read_only": false,
            "undo": "enable user",
            "parameters": {
                "username": {
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "description": "Username to disable",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "example_values": [
                        "test_user3"
                    ],
                    "column_order": 0,
                    "column_name": "Username"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "column_order": 1,
                    "data_path": "action_result.message",
                    "example_values": [
                        "User state changed"
                    ],
                    "data_type": "string",
                    "column_name": "Message"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "title": "Disable User",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "enable user",
            "description": "Enables the specified user",
            "verbose": "The action supports the following formats as input for <b>username</b>: <ul> <li>Simple user name format, for example, test_user (<i>sAMAccountName</i> in AD nomenclature)</li> <li>Email address, for example, test_user@corp.contoso.com (<i>userPrincipalName</i>)</li> <li>Distinguished name format, for example, CN=Test User,CN=Users,DC=corp,DC=contoso,DC=com (<i>distinguishedName</i>)</li> <li>Domain\\user_name, for example, Corp\\test_user</li> </ul><b>Action functional workflow</b><ul><li>This action will first find the user DN(distinguish name) using a filter of Hostname which is provided by the user as a parameter</li> <li>Now it will search for userAccountControl parameter for provided DN.</li> <li>If userAccountControl parameter is not none and action identifier is enable_user then it will modify the user state to enable mode</li></ul>",
            "type": "correct",
            "identifier": "enable_user",
            "read_only": false,
            "undo": "disable user",
            "parameters": {
                "username": {
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "description": "Username to enable",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "example_values": [
                        "test_user3"
                    ],
                    "column_order": 0,
                    "column_name": "Username"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "column_order": 1,
                    "data_path": "action_result.message",
                    "example_values": [
                        "User state changed"
                    ],
                    "data_type": "string",
                    "column_name": "Message"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "title": "Enable User",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list user groups",
            "description": "Get the groups that the user is a member of",
            "verbose": "The action supports the following formats as input for <b>username</b>: <ul> <li>Simple user name format, for example, test_user (<i>sAMAccountName</i> in AD nomenclature)</li> <li>Email address, for example, test_user@corp.contoso.com (<i>userPrincipalName</i>)</li> <li>Distinguished name format, for example, CN=Test User,CN=Users,DC=corp,DC=contoso,DC=com (<i>distinguishedName</i>)</li> <li>Domain\\user_name, for example, Corp\\test_user</li> </ul>",
            "type": "investigate",
            "identifier": "get_user_groups",
            "read_only": true,
            "parameters": {
                "username": {
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "description": "Username (to get groups it belongs to)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "example_values": [
                        "test_user3"
                    ],
                    "column_order": 0,
                    "column_name": "Username"
                },
                {
                    "column_order": 1,
                    "data_path": "action_result.data.*.group",
                    "example_values": [
                        "CN=TestUsers,DC=corp,DC=contoso,DC=com"
                    ],
                    "data_type": "string",
                    "column_name": "Groups"
                },
                {
                    "data_path": "action_result.summary.total_groups",
                    "example_values": [
                        2
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.message",
                    "example_values": [
                        "Member of (2):\r\nCN=TestUsers,DC=corp,DC=contoso,DC=com\nCN=Remote Desktop Users,CN=Builtin,DC=corp,DC=contoso,DC=com\n"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "title": "Group Membership",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "change system ou",
            "description": "Change the OU of a computer/system",
            "type": "generic",
            "identifier": "change_system_ou",
            "read_only": false,
            "parameters": {
                "ou": {
                    "required": true,
                    "description": "OU to change to",
                    "data_type": "string",
                    "order": 1
                },
                "hostname": {
                    "contains": [
                        "host name",
                        "ldap distinguished name"
                    ],
                    "description": "Hostname",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.hostname",
                    "data_type": "string",
                    "contains": [
                        "host name",
                        "ldap distinguished name"
                    ],
                    "example_values": [
                        "test_user3"
                    ],
                    "column_order": 0,
                    "column_name": "Host Name"
                },
                {
                    "column_order": 1,
                    "data_path": "action_result.parameter.ou",
                    "example_values": [
                        "Test123"
                    ],
                    "data_type": "string",
                    "column_name": "Destination OU"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "column_order": 2,
                    "data_path": "action_result.message",
                    "example_values": [
                        "OU changed successfully"
                    ],
                    "data_type": "string",
                    "column_name": "Message"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "height": 5,
                "type": "table",
                "title": "Change System OU"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "set system attribute",
            "description": "Set the value of an attribute of a computer/system",
            "verbose": "<b>Action Functional workflow</b><ul><li>This action will first find the machine DN(distinguish name) using a filter of Hostname which is provided by the user as a parameter.</li> <li>After that, it will search for the current value of a given attribute name provided as a parameter in action.</li> <li>If a provided attribute value is the same as the current attribute value then attribute value remains as it is. But if the attribute value is different then modify the value of the attribute. </li> </ul>",
            "type": "generic",
            "identifier": "set_system_attribute",
            "read_only": false,
            "parameters": {
                "attribute_value": {
                    "required": true,
                    "description": "Attribute value to set",
                    "data_type": "string",
                    "order": 3
                },
                "ph": {
                    "order": 1,
                    "data_type": "ph"
                },
                "hostname": {
                    "contains": [
                        "host name",
                        "ldap distinguished name"
                    ],
                    "description": "Hostname (to set the attribute of)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0
                },
                "attribute_name": {
                    "required": true,
                    "description": "Attribute name to modify",
                    "data_type": "string",
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "data_type": "string"
                },
                {
                    "column_order": 1,
                    "data_path": "action_result.parameter.attribute_name",
                    "example_values": [
                        "samaccountname"
                    ],
                    "data_type": "string",
                    "column_name": "Attribute Name"
                },
                {
                    "column_order": 2,
                    "data_path": "action_result.parameter.attribute_value",
                    "example_values": [
                        "test_user11"
                    ],
                    "data_type": "string",
                    "column_name": "Attribute Value"
                },
                {
                    "data_path": "action_result.parameter.hostname",
                    "data_type": "string",
                    "contains": [
                        "host name",
                        "ldap distinguished name"
                    ],
                    "example_values": [
                        "test_user1"
                    ],
                    "column_order": 0,
                    "column_name": "Host Name"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "column_order": 3,
                    "data_path": "action_result.message",
                    "example_values": [
                        "System attribute modified"
                    ],
                    "data_type": "string",
                    "column_name": "Message"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "height": 5,
                "type": "table",
                "title": "Set System Attribute"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get user attributes",
            "description": "Gets the attributes of a user",
            "verbose": "By default, useraccountcontrol, badpwdcount, pwdlastset and lastlogon fields are fetched along with the mentioned fields or the internally pre-defined fields based on scenario. If one or more or all the mentioned fields are invalid, the action will still pass and will display the default fields' values.<br/> The action supports the following formats as input for <b>username</b>: <ul> <li>Simple user name format, for example, test_user (<i>sAMAccountName</i> in AD nomenclature)</li> <li>Email address, for example, test_user@corp.contoso.com (<i>userPrincipalName</i>)</li> <li>Distinguished name format, for example, CN=Test User,CN=Users,DC=corp,DC=contoso,DC=com (<i>distinguishedName</i>)</li> <li>Domain\\user_name, for example, Corp\\test_user</li> </ul>In addition to the above formats and attributes that are matched against, the action also supports matching against an arbitrary attribute, the name of which can be specified in the <b>attribute</b> parameter. For example, to match a user with an <i>employeeID</i> of 10001, set the <b>attribute</b> parameter as <b>employeeID</b> and the <b>username</b> parameter as <b>10001</b>. An error is reported if the attribute (employeeID in this example) is not found on the LDAP server. More than one user matching is also reported as an error. Please see the ldap_app playbook in the community repo for examples.",
            "type": "investigate",
            "identifier": "get_user_attributes",
            "read_only": true,
            "parameters": {
                "username": {
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "description": "Username or Attribute value to match",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0
                },
                "attribute": {
                    "description": "Attribute name to match",
                    "data_type": "string",
                    "order": 1
                },
                "fields": {
                    "order": 2,
                    "data_type": "string",
                    "description": "Get fields (comma-separated)"
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.attribute",
                    "example_values": [
                        "Displayname"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.fields",
                    "example_values": [
                        "samaccountName"
                    ],
                    "data_type": "string"
                },
                {
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "data_path": "action_result.parameter.username",
                    "example_values": [
                        "The Administrator",
                        "test_user3"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.accountexpires",
                    "example_values": [
                        "9223370036854775807"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.badpasswordtime",
                    "example_values": [
                        "131847005589525500"
                    ],
                    "data_type": "string"
                },
                {
                    "column_order": 7,
                    "data_path": "action_result.data.*.badpwdcount",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string",
                    "column_name": "Bad Pwd Count"
                },
                {
                    "data_path": "action_result.data.*.cn",
                    "example_values": [
                        "Test User3"
                    ],
                    "data_type": "string"
                },
                {
                    "column_order": 14,
                    "data_path": "action_result.data.*.co",
                    "data_type": "string",
                    "column_name": "Country"
                },
                {
                    "data_path": "action_result.data.*.codepage",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.company",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.countrycode",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.department",
                    "data_type": "string"
                },
                {
                    "column_order": 1,
                    "data_path": "action_result.data.*.displayname",
                    "example_values": [
                        "Test User3"
                    ],
                    "data_type": "string",
                    "column_name": "Display Name"
                },
                {
                    "data_path": "action_result.data.*.distinguishedname",
                    "data_type": "string",
                    "contains": [
                        "ldap distinguished name"
                    ],
                    "example_values": [
                        "CN=Test User3,CN=Users,DC=corp,DC=contoso,DC=com"
                    ],
                    "column_order": 2,
                    "column_name": "Distinguished Name"
                },
                {
                    "data_path": "action_result.data.*.dscorepropagationdata",
                    "example_values": [
                        "20181003111127.0Z;20170110001231.0Z;16010001000416.0Z"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.givenname",
                    "example_values": [
                        "Test"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.instancetype",
                    "example_values": [
                        "4"
                    ],
                    "data_type": "string"
                },
                {
                    "column_order": 11,
                    "data_path": "action_result.data.*.l",
                    "data_type": "string",
                    "column_name": "City"
                },
                {
                    "column_order": 4,
                    "data_path": "action_result.data.*.lastlogoff",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string",
                    "column_name": "Last Logoff"
                },
                {
                    "column_order": 3,
                    "data_path": "action_result.data.*.lastlogon",
                    "example_values": [
                        "131847000011239275",
                        "131847680040779871"
                    ],
                    "data_type": "string",
                    "column_name": "Last Logon"
                },
                {
                    "column_order": 5,
                    "data_path": "action_result.data.*.logoncount",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string",
                    "column_name": "Logon Count"
                },
                {
                    "column_order": 8,
                    "contains": [
                        "email"
                    ],
                    "data_path": "action_result.data.*.mail",
                    "data_type": "string",
                    "column_name": "E-Mail"
                },
                {
                    "data_path": "action_result.data.*.manager",
                    "data_type": "string"
                },
                {
                    "column_order": 6,
                    "data_path": "action_result.data.*.memberof",
                    "example_values": [
                        "CN=TestUsers,DC=corp,DC=contoso,DC=com;CN=Remote Desktop Users,CN=Builtin,DC=corp,DC=contoso,DC=com"
                    ],
                    "data_type": "string",
                    "column_name": "Member Of"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "example_values": [
                        "Test User3"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objectcategory",
                    "example_values": [
                        "CN=Person,CN=Schema,CN=Configuration,DC=corp,DC=contoso,DC=com"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objectclass",
                    "example_values": [
                        "top;person;organizationalPerson;user"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objectguid",
                    "example_values": [
                        "13 ab 7f de 08 b5 32 44 9d e9 07 65 52 5a e4 49"
                    ],
                    "data_type": "string"
                },
                {
                    "column_order": 19,
                    "data_path": "action_result.data.*.objectsid",
                    "example_values": [
                        "S-1-5-00-3790544232-372029393-2474287633-1114"
                    ],
                    "data_type": "string",
                    "column_name": "Object SID"
                },
                {
                    "data_path": "action_result.data.*.postOfficeBox",
                    "data_type": "string"
                },
                {
                    "column_order": 13,
                    "data_path": "action_result.data.*.postalcode",
                    "data_type": "string",
                    "column_name": "Zip"
                },
                {
                    "column_order": 15,
                    "data_path": "action_result.data.*.primarygroupid",
                    "example_values": [
                        "513"
                    ],
                    "data_type": "string",
                    "column_name": "Primary Group ID"
                },
                {
                    "column_order": 16,
                    "data_path": "action_result.data.*.pwdlastset",
                    "example_values": [
                        "131800831957980568",
                        "131800682325338799"
                    ],
                    "data_type": "string",
                    "column_name": "Pwd Last Set"
                },
                {
                    "data_path": "action_result.data.*.samaccountname",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "Administrator",
                        "test_user3"
                    ],
                    "column_order": 0,
                    "column_name": "Username"
                },
                {
                    "data_path": "action_result.data.*.samaccounttype",
                    "example_values": [
                        "805006368"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sn",
                    "example_values": [
                        "User3"
                    ],
                    "data_type": "string"
                },
                {
                    "column_order": 12,
                    "data_path": "action_result.data.*.st",
                    "data_type": "string",
                    "column_name": "State"
                },
                {
                    "column_order": 10,
                    "data_path": "action_result.data.*.streetaddress",
                    "data_type": "string",
                    "column_name": "Street"
                },
                {
                    "data_path": "action_result.data.*.telephoneNumber",
                    "data_type": "string"
                },
                {
                    "column_order": 9,
                    "data_path": "action_result.data.*.title",
                    "data_type": "string",
                    "column_name": "Title"
                },
                {
                    "column_order": 17,
                    "data_path": "action_result.data.*.useraccountcontrol",
                    "example_values": [
                        "60000",
                        "66001"
                    ],
                    "data_type": "string",
                    "column_name": "User Account Control"
                },
                {
                    "data_path": "action_result.data.*.userprincipalname",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test_user3@corp.contoso.com"
                    ],
                    "column_order": 18,
                    "column_name": "User Principal Name"
                },
                {
                    "data_path": "action_result.data.*.usnchanged",
                    "example_values": [
                        "1600815"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.usncreated",
                    "example_values": [
                        "16003"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.whenchanged",
                    "example_values": [
                        "20180123123940.0Z"
                    ],
                    "data_type": "string"
                },
                {
                    "column_order": 20,
                    "data_path": "action_result.data.*.whencreated",
                    "example_values": [
                        "20141001130729.0Z"
                    ],
                    "data_type": "string",
                    "column_name": "When Created"
                },
                {
                    "data_path": "action_result.summary.bad_password_count",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.last_logon",
                    "example_values": [
                        "10/01/2018 07:51:41 AM UTC"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.password_last_set",
                    "example_values": [
                        "10/01/2018 11:59:55 AM UTC"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.state",
                    "example_values": [
                        "Disabled",
                        "Enabled"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "example_values": [
                        "State: Disabled, Bad password count: 0, Last logon: 10/23/2018 07:51:41 AM UTC, Password last set: 10/22/2018 11:59:55 AM UTC",
                        "State: Enabled, Bad password count: 0, Last logon: 10/23/2018 11:43:04 AM UTC, Password last set: 10/23/2018 11:37:12 AM UTC"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "title": "List Attributes",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get system attributes",
            "description": "Gets the attributes of a computer/system",
            "verbose": "By default, operatingsystem, operatingsystemversion, operatingsystemservicepack, useraccountcontrol, badpwdcount, pwdlastset and lastlogon fields are fetched along with the mentioned fields or the internally pre-defined fields based on scenario. If one or more or all the mentioned fields are invalid, the action will still pass and will display the default fields' values.",
            "type": "investigate",
            "identifier": "get_system_attributes",
            "read_only": true,
            "parameters": {
                "fields": {
                    "order": 1,
                    "data_type": "string",
                    "description": "Get fields (comma-separated)"
                },
                "hostname": {
                    "contains": [
                        "host name",
                        "ldap distinguished name"
                    ],
                    "description": "Hostname to query the attributes of",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.fields",
                    "example_values": [
                        "samaccountname,displayname",
                        "all"
                    ],
                    "data_type": "string"
                },
                {
                    "contains": [
                        "host name",
                        "ldap distinguished name"
                    ],
                    "data_path": "action_result.parameter.hostname",
                    "example_values": [
                        "test_hostname1"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.accountexpires",
                    "example_values": [
                        "9223370036854775807"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.badpasswordtime",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.badpwdcount",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.cn",
                    "example_values": [
                        "test_hostname"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.codepage",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string"
                },
                {
                    "column_order": 6,
                    "data_path": "action_result.data.*.countrycode",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string",
                    "column_name": "Country Code"
                },
                {
                    "data_path": "action_result.data.*.displayname",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.distinguishedname",
                    "data_type": "string",
                    "contains": [
                        "ldap distinguished name"
                    ],
                    "example_values": [
                        "CN=testhostname,OU=Test123,OU=ShawOU,DC=corp,DC=contoso,DC=com"
                    ],
                    "column_order": 2,
                    "column_name": "Distinguished Name"
                },
                {
                    "contains": [
                        "host name"
                    ],
                    "column_order": 1,
                    "data_path": "action_result.data.*.dnshostname",
                    "data_type": "string",
                    "column_name": "DNS Hostname"
                },
                {
                    "data_path": "action_result.data.*.dscorepropagationdata",
                    "example_values": [
                        "20181000074916.0Z;16010100000000.0Z"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.instancetype",
                    "example_values": [
                        "4"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.iscriticalsystemobject",
                    "example_values": [
                        "FALSE"
                    ],
                    "data_type": "string"
                },
                {
                    "column_order": 7,
                    "data_path": "action_result.data.*.lastlogoff",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string",
                    "column_name": "Last Logoff"
                },
                {
                    "column_order": 8,
                    "data_path": "action_result.data.*.lastlogon",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string",
                    "column_name": "Last Logon"
                },
                {
                    "column_order": 9,
                    "data_path": "action_result.data.*.lastlogontimestamp",
                    "data_type": "string",
                    "column_name": "Last Logon Timestamp"
                },
                {
                    "column_order": 10,
                    "data_path": "action_result.data.*.localpolicyflags",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string",
                    "column_name": "Local Policy Flags"
                },
                {
                    "column_order": 11,
                    "data_path": "action_result.data.*.logoncount",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string",
                    "column_name": "Logon Count"
                },
                {
                    "data_path": "action_result.data.*.ms-ds-creatorsid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ],
                    "example_values": [
                        "test_hostname"
                    ],
                    "column_order": 0,
                    "column_name": "Host Name"
                },
                {
                    "data_path": "action_result.data.*.netbootguid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.netbootmirrordatafile",
                    "data_type": "string"
                },
                {
                    "column_order": 3,
                    "data_path": "action_result.data.*.objectcategory",
                    "example_values": [
                        "CN=Computer,CN=Schema,CN=Configuration,DC=corp,DC=contoso,DC=com"
                    ],
                    "data_type": "string",
                    "column_name": "Object Category"
                },
                {
                    "column_order": 4,
                    "data_path": "action_result.data.*.objectclass",
                    "example_values": [
                        "top;person;organizationalPerson;user;computer"
                    ],
                    "data_type": "string",
                    "column_name": "Object Class"
                },
                {
                    "column_order": 5,
                    "data_path": "action_result.data.*.objectguid",
                    "example_values": [
                        "76 40 ab 86 69 e7 d9 48 95 67 3f 3b a5 1c 73 6b"
                    ],
                    "data_type": "string",
                    "column_name": "Object GUID"
                },
                {
                    "column_order": 12,
                    "data_path": "action_result.data.*.objectsid",
                    "example_values": [
                        "01 00 00 00 00 00 00 05 15 00 00 00 68 1d ef e1 d1 b7 2c 16 11 a2 7a 93 84 2f 00 00"
                    ],
                    "data_type": "string",
                    "column_name": "Object SID"
                },
                {
                    "column_order": 13,
                    "data_path": "action_result.data.*.operatingsystem",
                    "data_type": "string",
                    "column_name": "OS"
                },
                {
                    "column_order": 14,
                    "data_path": "action_result.data.*.operatingsystemservicepack",
                    "data_type": "string",
                    "column_name": "Service Pack"
                },
                {
                    "column_order": 15,
                    "data_path": "action_result.data.*.operatingsystemversion",
                    "data_type": "string",
                    "column_name": "OS Version"
                },
                {
                    "column_order": 16,
                    "data_path": "action_result.data.*.primarygroupid",
                    "example_values": [
                        "515"
                    ],
                    "data_type": "string",
                    "column_name": "Primary Group ID"
                },
                {
                    "data_path": "action_result.data.*.pwdlastset",
                    "example_values": [
                        "131846800401723900"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.samaccountname",
                    "example_values": [
                        "test_hostname1"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.samaccounttype",
                    "example_values": [
                        "805006369"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.serviceprincipalname",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.useraccountcontrol",
                    "example_values": [
                        "4100"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.usnchanged",
                    "example_values": [
                        "1691800"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.usncreated",
                    "example_values": [
                        "1689700"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.whenchanged",
                    "example_values": [
                        "20181023125053.0Z"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.whencreated",
                    "example_values": [
                        "20181022122540.0Z"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.bad_password_count",
                    "example_values": [
                        "0"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.last_logon",
                    "example_values": [
                        "Never"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.os",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.password_last_set",
                    "example_values": [
                        "10/01/2018 12:25:40 PM UTC"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.state",
                    "example_values": [
                        "Enabled"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "example_values": [
                        "State: Enabled, Bad password count: 0, Last logon: Never, Password last set: 10/22/2018 12:25:40 PM UTC"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "title": "List Attributes",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "set password",
            "description": "Set the password of a user",
            "verbose": "Note that a user currently logged on will stay logged in. The LDAP server may refuse to accept the password unless the connection is over SSL. <p class=\"warn\">Exercise caution when using this Action. The password may be kept and logged in clear text.</p>",
            "type": "contain",
            "identifier": "set_password",
            "read_only": false,
            "parameters": {
                "username": {
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "description": "Username to change password of",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0
                },
                "new_password": {
                    "required": true,
                    "description": "Password string to set",
                    "data_type": "string",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.new_password",
                    "example_values": [
                        "abc@123"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "example_values": [
                        "test_user3"
                    ],
                    "column_order": 0,
                    "column_name": "Username"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "column_order": 1,
                    "data_path": "action_result.message",
                    "example_values": [
                        "User password changed"
                    ],
                    "data_type": "string",
                    "column_name": "Message"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "height": 5,
                "type": "table",
                "title": "Set Password"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "reset password",
            "description": "Force the user to change the password at the next logon",
            "verbose": "Once the password is reset, the user is required to login and enter the new password interactively. Therefore auto logins (from applications) will fail.",
            "type": "contain",
            "identifier": "reset_password",
            "read_only": false,
            "parameters": {
                "username": {
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "description": "Username to enforce 'change password at next logon'",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "contains": [
                        "user name",
                        "ldap distinguished name"
                    ],
                    "example_values": [
                        "test_user4"
                    ],
                    "column_order": 0,
                    "column_name": "Username"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "column_order": 1,
                    "data_path": "action_result.message",
                    "example_values": [
                        "User 'change password at next logon' enforced"
                    ],
                    "data_type": "string",
                    "column_name": "Message"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "height": 5,
                "type": "table",
                "title": "Reset Password"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get users",
            "description": "Get the list of users",
            "verbose": "Use this action to get a list of users. Only users that have email addresses will be returned. If the <b>all_users</b> parameter is set to <b>True</b>, the action will list all users in the enterprise and ignore the <b>object_name</b> and <b>object_class</b> parameters. To list users that belong to a specific <i>group</i>, <i>organizationalUnit</i> or <i>container</i> (known as objects), set the <b>all_users</b> parameter to <b>False</b> and the <b>object_name</b> and <b>object_class</b> (both required in this case) parameters to the required values.<br>A list of object classes is supplied, one of which the user may choose as the value for the <b>object_class</b> parameter, these are:<br><ul><li>container</li><li>organizationalUnit</li><li>group</li></ul>When executing the action from a playbook, the author can look up arbitrary object classes by supplying the desired class as a string for the <b>object_class</b> parameter.<br>The action will first query the system for the <i>dn</i> of the object (using the name and class). The action will fail if an object with the specified <b>object_name</b> belonging to the specified <b>object_class</b> is not found. If the <b>object_class</b> equals \"group\" then the returned group will be used to populate a query filter that returns all users with a <i>memberOf</i> attribute equal to the full <i>dn</i> of the group with that name. If the <b>object_class</b> is any string other than \"group\" (such as \"container\" or \"organizationalUnit\") then the <i>dn</i> returned from the first query will be used as the <i>base_dn</i> of the User query.<br>Some examples:<br><ul><li>To find all users in an Organizational Unit(OU) named <i>UsersOU</i><br><b>all_users</b>: False<br><b>object_name</b>: UsersOu<br><b>object_class</b>: organizationalUnit<br></li><li>To find all users in a Container named <i>Users</i> (Default container found in most AD installations)<br><b>all_users</b>: False<br><b>object_name</b>: Users<br><b>object_class</b>: container<br></li><li>To find all users in the group named <i>Enterprise Admins</i> (one of the most powerful default AD groups)<br><b>all_users</b>: False<br><b>object_name</b>: Enterprise Admins<br><b>object_class</b>: group<br></li><li>To find all users in the complete enterprise<br><b>all_users</b>: True<br></li></ul>",
            "type": "investigate",
            "identifier": "get_users",
            "read_only": true,
            "parameters": {
                "ph": {
                    "order": 1,
                    "data_type": "ph"
                },
                "object_name": {
                    "default": "Users",
                    "description": "Object name to query the users of",
                    "data_type": "string",
                    "order": 2
                },
                "object_class": {
                    "description": "Object class to query the users of",
                    "data_type": "string",
                    "value_list": [
                        "container",
                        "organizationalUnit",
                        "group"
                    ],
                    "default": "container",
                    "order": 3
                },
                "all_users": {
                    "default": false,
                    "order": 0,
                    "data_type": "boolean",
                    "description": "Get All Users (other params are ignored if set)"
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.all_users",
                    "example_values": [
                        false,
                        true
                    ],
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.object_class",
                    "example_values": [
                        "container"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.object_name",
                    "example_values": [
                        "Users"
                    ],
                    "data_type": "string"
                },
                {
                    "column_order": 1,
                    "data_path": "action_result.data.*.displayname",
                    "example_values": [
                        "The Administrator"
                    ],
                    "data_type": "string",
                    "column_name": "Display Name"
                },
                {
                    "data_path": "action_result.data.*.dn",
                    "data_type": "string",
                    "contains": [
                        "ldap distinguished name"
                    ],
                    "example_values": [
                        "CN=Administrator,CN=Users,DC=corp,DC=contoso,DC=com"
                    ],
                    "column_order": 2,
                    "column_name": "User DN"
                },
                {
                    "contains": [
                        "email"
                    ],
                    "data_path": "action_result.data.*.emails",
                    "example_values": [
                        "test@corp.contoso.com"
                    ],
                    "data_type": "string"
                },
                {
                    "contains": [
                        "email"
                    ],
                    "column_order": 3,
                    "data_path": "action_result.data.*.emails.0",
                    "data_type": "string",
                    "column_name": "First Email"
                },
                {
                    "column_order": 0,
                    "data_path": "action_result.data.*.samaccountname",
                    "example_values": [
                        "Administrator"
                    ],
                    "data_type": "string",
                    "column_name": "SamAccount Name"
                },
                {
                    "data_path": "action_result.summary.total_users",
                    "example_values": [
                        34
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.message",
                    "example_values": [
                        "Total users: 34"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "height": 5,
                "type": "table",
                "title": "List Users"
            },
            "versions": "EQ(*)"
        }
    ]
}